<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.yosua</groupId>
    <artifactId>homie</artifactId>
    <version>0.0.1-SNAPSHOT</version>

    <packaging>pom</packaging>

    <name>homie</name>
    <description>Demo project for Spring Boot</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.5.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <spring.boot.version>2.0.5.RELEASE</spring.boot.version>
        <spring.boot.mongo.version>2.0.5.RELEASE</spring.boot.mongo.version>
        <spring.boot.actuator.version>2.0.5.RELEASE</spring.boot.actuator.version>
        <spring.version>5.0.8.RELEASE</spring.version>
        <pojobuilder.version>4.0.1</pojobuilder.version>
        <orika.version>1.5.2</orika.version>
        <joda.time.version>2.9.9</joda.time.version>
        <fongo.version>2.1.0</fongo.version>
        <apache.common.lang3.version>3.6</apache.common.lang3.version>
        <springfox.version>2.7.0</springfox.version>
        <retrofit.version>2.3.0</retrofit.version>
        <hibernate.version>6.0.5.Final</hibernate.version>
        <jacoco.maven.plugin.version>0.7.9</jacoco.maven.plugin.version>
        <maven.site.plugin.version>3.6</maven.site.plugin.version>
        <maven.surefire.plugin.version>2.20.1</maven.surefire.plugin.version>
        <maven.failsafe.plugin.version>2.20.1</maven.failsafe.plugin.version>
        <maven.release.plugin>2.5.3</maven.release.plugin>
        <maven.deploy.plugin>2.8.2</maven.deploy.plugin>
        <maven.source.plugin>3.0.1</maven.source.plugin>
        <powermock.version>1.7.0</powermock.version>
        <rx.java.version>2.1.7</rx.java.version>
        <auth0.version>3.2.0</auth0.version>
        <fasterxml.jackson.version>2.8.8</fasterxml.jackson.version>
        <project.lombok.version>1.16.16</project.lombok.version>
        <commons.codec.version>1.4</commons.codec.version>
    </properties>

    <dependencyManagement>
        <dependencies>

            <dependency>
                <groupId>com.yosua</groupId>
                <artifactId>rest-web</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.yosua</groupId>
                <artifactId>rest-web-model</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>com.yosua</groupId>
                <artifactId>service-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.yosua</groupId>
                <artifactId>service-impl</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>com.yosua</groupId>
                <artifactId>dao</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.yosua</groupId>
                <artifactId>entity</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.yosua</groupId>
                <artifactId>outbound-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.yosua</groupId>
                <artifactId>outbound-impl</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.yosua</groupId>
                <artifactId>inbound-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.yosua</groupId>
                <artifactId>inbound-impl</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.yosua</groupId>
                <artifactId>libraries</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>it.ozimov</groupId>
                <artifactId>spring-boot-email-core</artifactId>
                <version>0.6.3</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-mongodb</artifactId>
                <version>${spring.boot.mongo.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-actuator</artifactId>
                <version>${spring.boot.actuator.version}</version>
            </dependency>
            <dependency>
                <groupId>net.karneim</groupId>
                <artifactId>pojobuilder</artifactId>
                <version>${pojobuilder.version}</version>
            </dependency>
            <dependency>
                <groupId>ma.glasnost.orika</groupId>
                <artifactId>orika-core</artifactId>
                <version>${orika.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.fakemongo</groupId>
                <artifactId>fongo</artifactId>
                <version>${fongo.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${apache.common.lang3.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${springfox.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${springfox.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.retrofit2</groupId>
                <artifactId>retrofit</artifactId>
                <version>${retrofit.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring.boot.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-cache</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-redis</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.validator</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.retrofit2</groupId>
                <artifactId>converter-jackson</artifactId>
                <version>${retrofit.version}</version>
            </dependency>
            <dependency>
                <groupId>io.reactivex.rxjava2</groupId>
                <artifactId>rxjava</artifactId>
                <version>${rx.java.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${fasterxml.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>org.passay</groupId>
                <artifactId>passay</artifactId>
                <version>1.0</version>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-module-junit4</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-api-mockito</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.kafka</groupId>
                <artifactId>spring-kafka</artifactId>
                <version>1.3.7.RELEASE</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-transport-native-kqueue</artifactId>
                <version>4.1.30.Final</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-transport-native-epoll</artifactId>
                <version>4.1.30.Final</version>
            </dependency>
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>2.10</version>
            </dependency>

        </dependencies>
    </dependencyManagement>



    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-mongodb</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
        </dependency>
        <dependency>
            <groupId>io.reactivex.rxjava2</groupId>
            <artifactId>rxjava</artifactId>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.auth0</groupId>
            <artifactId>java-jwt</artifactId>
            <version>${auth0.version}</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${project.lombok.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>${commons.codec.version}</version>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-transport-native-kqueue</artifactId>
            <version>4.1.30.Final</version>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-transport-native-epoll</artifactId>
            <version>4.1.30.Final</version>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco.maven.plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <!--<plugin>-->
                <!--<groupId>com.spotify</groupId>-->
                <!--<artifactId>dockerfile-maven-plugin</artifactId>-->
                <!--<version>1.3.6</version>-->
                <!--<configuration>-->
                    <!--<repository>${docker.image.prefix}/${project.artifactId}</repository>-->
                <!--</configuration>-->
            <!--</plugin>-->
            <!--<plugin>-->
                <!--<groupId>org.springframework.boot</groupId>-->
                <!--<artifactId>spring-boot-maven-plugin</artifactId>-->
                <!--<configuration>-->
                    <!--<mainClass>com.yosua.homie.Main</mainClass>-->
                <!--</configuration>-->
            <!--</plugin>-->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <configuration>
                    <destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
                    <rules>
                        <rule implementation="org.jacoco.maven.RuleConfiguration">
                            <element>BUNDLE</element>
                            <limits>
                                <limit implementation="org.jacoco.report.check.Limit">
                                    <counter>INSTRUCTION</counter>
                                    <value>COVEREDRATIO</value>
                                    <minimum>0.90</minimum>
                                </limit>
                                <limit implementation="org.jacoco.report.check.Limit">
                                    <counter>LINE</counter>
                                    <value>COVEREDRATIO</value>
                                    <minimum>0.90</minimum>
                                </limit>
                            </limits>
                        </rule>
                    </rules>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${maven.deploy.plugin}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>${maven.release.plugin}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven.source.plugin}</version>
            </plugin>
        </plugins>
    </build>

    <modules>
        <module>rest-web</module>
        <module>rest-web-model</module>
        <module>service-api</module>
        <module>service-impl</module>
        <module>dao</module>
        <module>entity</module>
        <module>outbound-api</module>
        <module>outbound-impl</module>
        <module>inbound-api</module>
        <module>inbound-impl</module>
        <module>libraries</module>
    </modules>
</project>
